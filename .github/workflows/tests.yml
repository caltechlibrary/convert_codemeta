name: CI

on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason'
        required: false
        default: 'Manual trigger'

jobs:
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
          python-version: [3.6, 3.7, 3.8]
          services: [release, lowest]
          include:
          - services: release
            REQUIREMENTS: "release"
            REQUIREMENTS_LEVEL: "pypi"
          - services: lowest
            REQUIREMENTS: "lowest"
            REQUIREMENTS_LEVEL: "min"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Generate dependencies
        run: |
          python -m pip install --upgrade pip setuptools py wheel requirements-builder
          requirements-builder -e ${{ matrix.EXTRAS }} --level=${{ matrix.REQUIREMENTS_LEVEL }} setup.py > .${{ matrix.REQUIREMENTS }}-${{ matrix.python-version }}-requirements.txt
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.${{ matrix.REQUIREMENTS }}-${{ matrix.python-version }}-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          pip install -r .${{matrix.REQUIREMENTS}}-${{ matrix.python-version }}-requirements.txt
          pip install .[all]
          pip freeze
          docker --version
          docker-compose --version
      - name: Run tests
        run: |
          ./run-tests.sh --check-pytest
