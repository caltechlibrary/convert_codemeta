name: CI

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:

  check-manifest:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Setup Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.7
        - name: Check Python manifest completeness
          run: |
            python -m pip install --upgrade pip setuptools py wheel
            pip install -e .[tests]
            ./run-tests.sh --check-manifest
  docs-sphinx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip setuptools py wheel
          pip install -e .

  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
          python-version: [3.6, 3.7, 3.8]
          services: [release, lowest]
          include:
          - services: release
            REQUIREMENTS: "release"
            REQUIREMENTS_LEVEL: "pypi"

          - services: lowest
            REQUIREMENTS: "lowest"
            REQUIREMENTS_LEVEL: "min"
    env:

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Generate dependencies
        run: |
          python -m pip install --upgrade pip setuptools py twine wheel coveralls requirements-builder
          requirements-builder -e all --level=${{matrix.REQUIREMENTS_LEVEL}} setup.py > .${{matrix.REQUIREMENTS}}-requirements.txt
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.${{matrix.REQUIREMENTS}}-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          pip install -r .${{matrix.REQUIREMENTS}}-requirements.txt
          pip install -e .[all]
          pip freeze
          docker --version
          docker-compose --version
      - name: Run tests
        run: |
          ./run-tests.sh --check-pytest
